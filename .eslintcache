[{"D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\index.tsx":"1","D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\reportWebVitals.ts":"2","D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\App.tsx":"3","D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\Wallet.tsx":"4","D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\components\\ThemeControls.tsx":"5"},{"size":222,"mtime":1674553645514,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1671736784888,"results":"8","hashOfConfig":"7"},{"size":2301,"mtime":1674472181236,"results":"9","hashOfConfig":"7"},{"size":3860,"mtime":1674470247327,"results":"10","hashOfConfig":"7"},{"size":1717,"mtime":1671737895394,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2hdgvy",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\index.tsx",[],"D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\reportWebVitals.ts",[],"D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\App.tsx",["24","25"],"import {\n  Chain,\n  EthereumClient,\n  modalConnectors,\n  walletConnectProvider,\n} from \"@web3modal/ethereum\"\nimport { configureChains, createClient, WagmiConfig } from \"wagmi\"\nimport { arbitrum, mainnet, polygon, fantom } from \"wagmi/chains\"\nimport Wallet from \"./Wallet\"\nimport './App.css'\nimport { useEffect, useState } from \"react\"\n\n// 1. Get projectID at https://cloud.walletconnect.com\nif (!process.env.REACT_APP_WALLETCONNECT_ID) {\n  throw new Error('You need to provide REACT_APP_WALLETCONNECT_ID env variable')\n}\n\nconst projectId = process.env.REACT_APP_WALLETCONNECT_ID\n\n// 2. Wagmi client\nconst additionalChains: Chain[] = [\n  {\n    id: 250,\n    name: 'Fantom',\n    network: 'fantom',\n    nativeCurrency: {\n      name: 'Fantom',\n      symbol: 'FTM',\n      decimals: 18\n    },\n    rpcUrls: {\n      default: {\n        http: ['https://rpc.ankr.com/fantom']\n      },\n      public: {\n        http: ['https://rpc.ankr.com/fantom']\n      }\n    },\n    blockExplorers: {\n      default: {name: 'FTMScan', url: 'https://ftmscan.com'},\n      public: {name: 'FTMScan', url: 'https://ftmscan.com'}\n    },\n  },\n  {\n    id: 7700,\n    name: 'Canto',\n    network: 'canto',\n    nativeCurrency: {\n      name: 'Canto',\n      symbol: 'CANTO',\n      decimals: 18\n    },\n    rpcUrls: {\n      default: {\n        http: ['https://canto.slingshot.finance']\n      },\n      public: {\n        http: ['https://canto.slingshot.finance']\n      }\n    },\n    blockExplorers: {\n      default: {name: 'Canto Explorer', url: 'https://evm.explorer.canto.io'},\n      public: {name: 'Canto Explorer', url: 'https://evm.explorer.canto.io'}\n    },\n  }\n]\nconst chains = [mainnet, ...additionalChains, arbitrum]\nconst { provider } = configureChains(chains, [\n  walletConnectProvider({ projectId }),\n]);\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors: modalConnectors({ appName: \"web3Modal\", chains }),\n  provider,\n});\n\n// 3. Configure modal ethereum client\nexport const ethereumClient = new EthereumClient(wagmiClient, chains)\n\nfunction App() {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    setReady(true)\n  }, [])\n  \n  return (\n    <>\n      {ready ? (\n        <WagmiConfig client={wagmiClient}>\n          <Wallet />\n        </WagmiConfig>\n      ) : null}\n    </>\n  )\n}\n\nexport default App;\n\n","D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\Wallet.tsx",["26","27"],"import React from 'react'\r\nimport { useWeb3Modal, Web3Button, Web3Modal, useWeb3ModalNetwork  } from '@web3modal/react'\r\nimport { Chain, useAccount } from 'wagmi'\r\nimport ThemeControls from './components/ThemeControls'\r\nimport { ethereumClient } from './App'\r\nimport { useNetwork, useSwitchNetwork } from 'wagmi'\r\n\r\nconst Wallet= () => {\r\n  const { selectedChain, setSelectedChain } = useWeb3ModalNetwork()\r\n\r\n  const { isConnected } = useAccount()\r\n  const { open } = useWeb3Modal()\r\n  console.log('isConnected', isConnected)\r\n  console.log('open', open)\r\n  console.log('selectedChain', selectedChain)\r\n\r\n  const { chain } = useNetwork()\r\n  const { chains, error, isLoading, pendingChainId, switchNetwork } = useSwitchNetwork()\r\n\r\n  return (\r\n    <>\r\n      <Web3Button balance=\"show\" icon=\"hide\" label=\"Connect\" />\r\n      {chains.map((x) => (\r\n        <button\r\n          disabled={!switchNetwork || x.id === chain?.id}\r\n          key={x.id}\r\n          onClick={() => switchNetwork?.(x.id)}\r\n        >\r\n          {x.name}\r\n          {isLoading && pendingChainId === x.id && ' (switching)'}\r\n        </button>\r\n      ))}\r\n \r\n      <div>{error && error.message}</div>\r\n\r\n      <ThemeControls />\r\n\r\n      <Web3Modal\r\n        ethereumClient={ethereumClient}\r\n        // Custom Linking Mobile Wallets\r\n        mobileWallets={[\r\n          {\r\n            id: 'metaMask',\r\n            name: 'MetaMask',\r\n            links: { native: 'metamask://', universal: 'https://metamask.app.link' }\r\n          },\r\n          {\r\n            id: 'trust',\r\n            name: 'Trust Wallet',\r\n            links: { native: 'trust://', universal: 'https://link.trustwallet.com' }\r\n          },\r\n          {\r\n            id: 'ledger',\r\n            name: 'Ledger Live',\r\n            links: { native: 'ledgerlive://', universal: 'https://www.ledger.com' }\r\n          },\r\n          {\r\n            id: 'rainbow',\r\n            name: 'Rainbow',\r\n            links: { native: 'rainbow://', universal: 'https://rainbow.me' }\r\n          },\r\n          {\r\n            id: 'zerion',\r\n            name: 'Zerion',\r\n            links: { native: 'zerion://', universal: 'https://wallet.zerion.io' }\r\n          },\r\n          {\r\n            id: 'tokenary',\r\n            name: 'Tokenary',\r\n            links: { native: 'tokenary://', universal: 'https://tokenary.io' }\r\n          }\r\n        ]}\r\n        // Custom Linking Desktop Wallets\r\n        desktopWallets={[\r\n          {\r\n            id: 'ledger',\r\n            name: 'Ledger Live',\r\n            links: { native: 'ledgerlive://', universal: 'https://www.ledger.com' }\r\n          },\r\n          {\r\n            id: 'zerion',\r\n            name: 'Zerion',\r\n            links: { native: 'zerion://', universal: 'https://wallet.zerion.io' }\r\n          },\r\n          {\r\n            id: 'tokenary',\r\n            name: 'Tokenary',\r\n            links: { native: 'tokenary://', universal: 'https://tokenary.io' }\r\n          },\r\n          {\r\n            id: 'oreid',\r\n            name: 'OREID',\r\n            links: {\r\n              native: '',\r\n              universal: 'https://www.oreid.io/'\r\n            }\r\n          }\r\n        ]}\r\n        // Custom Wallet Images\r\n        walletImages={{\r\n          metaMask: '/images/wallet_metamask.webp',\r\n          brave: '/images/wallet_brave.webp',\r\n          ledger: '/images/wallet_ledger.webp',\r\n          coinbaseWallet: '/images/wallet_coinbase.webp',\r\n          zerion: '/images/wallet_zerion.webp',\r\n          trust: '/images/wallet_trust.webp',\r\n          rainbow: '/images/wallet_rainbow.webp',\r\n          oreid: '/images/wallet_oreid.svg'\r\n        }}\r\n        // Custom Chain Images\r\n        chainImages={{\r\n          137: '/images/chain_polygon.webp',\r\n          10: '/images/chain_optimism.webp',\r\n          42161: '/images/chain_arbitrum.webp'\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Wallet","D:\\00David\\Programmering\\PaintSwap\\wallet-demo\\src\\components\\ThemeControls.tsx",[],{"ruleId":"28","severity":1,"message":"29","line":8,"column":29,"nodeType":"30","messageId":"31","endLine":8,"endColumn":36},{"ruleId":"28","severity":1,"message":"32","line":8,"column":38,"nodeType":"30","messageId":"31","endLine":8,"endColumn":44},{"ruleId":"28","severity":1,"message":"33","line":3,"column":10,"nodeType":"30","messageId":"31","endLine":3,"endColumn":15},{"ruleId":"28","severity":1,"message":"34","line":9,"column":26,"nodeType":"30","messageId":"31","endLine":9,"endColumn":42},"@typescript-eslint/no-unused-vars","'polygon' is defined but never used.","Identifier","unusedVar","'fantom' is defined but never used.","'Chain' is defined but never used.","'setSelectedChain' is assigned a value but never used."]